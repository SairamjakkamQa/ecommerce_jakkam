<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-05T15:32:35 IST" name="Default suite" finished-at="2023-10-05T15:32:44 IST" duration-ms="8468">
    <groups>
    </groups>
    <test started-at="2023-10-05T15:32:35 IST" name="Default test" finished-at="2023-10-05T15:32:44 IST" duration-ms="8468">
      <class name="com.Equarz.Testcases.RegTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.Equarz.Testcases.RegTest@4a83a74a]" started-at="2023-10-05T15:32:36 IST" name="initialization" finished-at="2023-10-05T15:32:40 IST" duration-ms="3091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="Registration(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.Equarz.Testcases.RegTest@4a83a74a]" started-at="2023-10-05T15:32:40 IST" name="Registration" data-provider="readSignUpData" finished-at="2023-10-05T15:32:44 IST" duration-ms="4312" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chakri]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vineesh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chakrivineesh.marolix@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9515990525]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chakri@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Chakri@123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "Object.getClass()" because "object" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "object" is null
at org.openqa.selenium.support.events.EventFiringWebDriver.extractInterfaces(EventFiringWebDriver.java:120)
at org.openqa.selenium.support.events.EventFiringWebDriver.access$300(EventFiringWebDriver.java:69)
at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.<init>(EventFiringWebDriver.java:397)
at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.<init>(EventFiringWebDriver.java:389)
at org.openqa.selenium.support.events.EventFiringWebDriver.createWebElement(EventFiringWebDriver.java:327)
at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:196)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy17.sendKeys(Unknown Source)
at com.Pageobjects.Registration_Functionality.Regdetails(Registration_Functionality.java:56)
at com.Equarz.Testcases.RegTest.Registration(RegTest.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registration -->
      </class> <!-- com.Equarz.Testcases.RegTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
